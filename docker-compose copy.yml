
services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"      

  backend:
    build:
      context: . 
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
      - shared_uploads:/app/uploads    
      - ./celery_worker:/app/celery_worker
      - ./backend/app/prestart.sh:/app/prestart.sh
    env_file:
      - .env
    environment:
      - REDIS_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
      - db
      - celery_worker
    command: ["/bin/bash", "/app/prestart.sh"]

  frontend:
    build:
      context: . 
      dockerfile: frontend/Dockerfile
      args:
        # Pass the HF username to the build so the link works correctly
        REACT_APP_HF_USERNAME: ${HUGGING_FACE_USERNAME}
    ports:
      - "3000:3000"
    depends_on:
      - backend

  worker:
    build:
      context: .            
      dockerfile: worker/Dockerfile
    volumes:
      - shared_uploads:/app/uploads
    env_file:
      - .env
    environment:
      # Explicitly set the mode for this worker
      - WORKER_MODE=GPU
    depends_on:
      - db
      - backend

  celery_worker:
    build:
      context: .            
      dockerfile: celery_worker/Dockerfile
    volumes:
      - shared_uploads:/app/uploads
      - ./celery_worker:/app/celery_worker
    env_file:
      - .env
    environment:
      # Explicitly set the mode for this worker
      - WORKER_MODE=GPU-SERVERLESS
      - REDIS_BROKER_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    #command: ["celery", "-A", "celery_worker.worker", "worker", "--loglevel=info"]


volumes:
  postgres_data:
  shared_uploads: